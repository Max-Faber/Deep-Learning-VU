import numpy as np
from assignment_1.plot import plot_learning_curve

accs_sigmoid = np.array([
    [0.0996,    0.0814, 0.1008, 0.1334, 0.094],     # Epoch 1
    [0.9472,    0.949,  0.9464, 0.9462, 0.9494],    # Epoch 2
    [0.9582,    0.959,  0.9574, 0.953,  0.9566],    # Epoch 3
    [0.9624,    0.961,  0.9614, 0.9616, 0.9616],    # Epoch 4
    [0.9646,    0.9646, 0.9652, 0.9654, 0.9656],    # Epoch 5
    [0.9652,    0.967,  0.9666, 0.9654, 0.9674],    # Epoch 6
    [0.9656,    0.9694, 0.9688, 0.9668, 0.9706],    # Epoch 7
    [0.9668,    0.97,   0.9702, 0.9684, 0.9712],    # Epoch 8
    [0.9678,    0.9716, 0.9696, 0.9688, 0.9706],    # Epoch 9
    [0.9698,    0.971,  0.9708, 0.9702, 0.972],     # Epoch 10
    [0.9696,    0.971,  0.9718, 0.9698, 0.9722],    # Epoch 11
    [0.9696,    0.9712, 0.9722, 0.9702, 0.973],     # Epoch 12
    [0.9708,    0.9718, 0.9724, 0.9706, 0.973],     # Epoch 13
    [0.9706,    0.9726, 0.9722, 0.9712, 0.9736],    # Epoch 14
    [0.971,     0.972,  0.9728, 0.9714, 0.973],     # Epoch 15
    [0.9708,    0.9724, 0.9732, 0.9722, 0.9732],    # Epoch 16
    [0.9708,    0.9726, 0.9742, 0.9724, 0.9732],    # Epoch 17
    [0.9712,    0.9726, 0.9738, 0.973,  0.9734],    # Epoch 18
    [0.9716,    0.9732, 0.9744, 0.973,  0.9736],    # Epoch 19
    [0.9716,    0.973,  0.9744, 0.973,  0.9732]     # Epoch 20
])

accs_relu = np.array([
    [0.062,     0.074,  0.13,   0.1058, 0.0678],    # Epoch 1
    [0.8492,    0.8116, 0.8492, 0.801,  0.901],     # Epoch 2
    [0.8964,    0.9094, 0.7296, 0.8918, 0.938],     # Epoch 3
    [0.9258,    0.8678, 0.8924, 0.9372, 0.9508],    # Epoch 4
    [0.9338,    0.9454, 0.9204, 0.9328, 0.956],     # Epoch 5
    [0.9396,    0.947,  0.931,  0.9128, 0.9612],    # Epoch 6
    [0.9564,    0.9576, 0.9368, 0.9434, 0.9582],    # Epoch 7
    [0.9588,    0.9602, 0.9368, 0.9508, 0.961],     # Epoch 8
    [0.926,     0.9604, 0.9436, 0.9522, 0.9636],    # Epoch 9
    [0.958,     0.9554, 0.9532, 0.9564, 0.9644],    # Epoch 10
    [0.9496,    0.9616, 0.9456, 0.9556, 0.9642],    # Epoch 11
    [0.9544,    0.9622, 0.9566, 0.9548, 0.9632],    # Epoch 12
    [0.9526,    0.9606, 0.9598, 0.9576, 0.9678],    # Epoch 13
    [0.9612,    0.9622, 0.9596, 0.9598, 0.9662],    # Epoch 14
    [0.9542,    0.9632, 0.952,  0.9612, 0.9658],    # Epoch 15
    [0.9566,    0.9628, 0.9626, 0.9578, 0.9672],    # Epoch 16
    [0.9568,    0.965,  0.9606, 0.9598, 0.9662],    # Epoch 17
    [0.9636,    0.962,  0.9598, 0.9594, 0.9676],    # Epoch 18
    [0.9624,    0.9624, 0.9602, 0.9638, 0.97],      # Epoch 19
    [0.9664,    0.9636, 0.965,  0.9638, 0.9676]     # Epoch 20
])

accs_sigmoid_extra_hidden_layer = np.array([
    [0.1006,    0.106,  0.102,  0.0974, 0.0842],    # Epoch 1
    [0.9034,    0.9036, 0.9008, 0.9058, 0.907],     # Epoch 2
    [0.9226,    0.9246, 0.924,  0.9248, 0.9234],    # Epoch 3
    [0.934,     0.9346, 0.9326, 0.9328, 0.9336],    # Epoch 4
    [0.9376,    0.9402, 0.9382, 0.938,  0.941],     # Epoch 5
    [0.9426,    0.9424, 0.9416, 0.9416, 0.9444],    # Epoch 6
    [0.945,     0.946,  0.9458, 0.9448, 0.946],     # Epoch 7
    [0.9484,    0.9486, 0.9482, 0.9464, 0.9478],    # Epoch 8
    [0.95,      0.9492, 0.95,   0.948,  0.9502],    # Epoch 9
    [0.9514,    0.9508, 0.9512, 0.9504, 0.9514],    # Epoch 10
    [0.9524,    0.9518, 0.9522, 0.9524, 0.9514],    # Epoch 11
    [0.9536,    0.9532, 0.9534, 0.9538, 0.9522],    # Epoch 12
    [0.9532,    0.9536, 0.9544, 0.9546, 0.953],     # Epoch 13
    [0.954,     0.9538, 0.9562, 0.9552, 0.9542],    # Epoch 14
    [0.9558,    0.9546, 0.9562, 0.9556, 0.9556],    # Epoch 15
    [0.9564,    0.9554, 0.9574, 0.9566, 0.9562],    # Epoch 16
    [0.9562,    0.9566, 0.958,  0.957,  0.9568],    # Epoch 17
    [0.9582,    0.9568, 0.9582, 0.9572, 0.9578],    # Epoch 18
    [0.9592,    0.9574, 0.9578, 0.9582, 0.9578],    # Epoch 19
    [0.9602,    0.958,  0.9584, 0.9582, 0.9584],    # Epoch 20
])

def sigmoid_vs_relu():
    plot_learning_curve(
        title='Mean accuracy per epoch averaged over 5 runs',
        x_label='Epoch',
        y_label='Accuracy',
        vals_a=accs_sigmoid,
        label_a='Model with Sigmoid activation',
        vals_b=accs_relu,
        label_b='Model with ReLU activation'
    )

def extra_hidden_layer_vs_sigmoid():
    plot_learning_curve(
        title='Mean accuracy per epoch averaged over 5 runs',
        x_label='Epoch',
        y_label='Accuracy',
        vals_a=accs_sigmoid_extra_hidden_layer,
        label_a='Model with Sigmoid activation and extra hidden layer',
        vals_b=accs_sigmoid,
        label_b='Model with Sigmoid activation'
    )

if __name__ == '__main__':
    # sigmoid_vs_relu()
    extra_hidden_layer_vs_sigmoid()
